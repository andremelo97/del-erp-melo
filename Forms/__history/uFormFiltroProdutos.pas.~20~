unit uFormFiltroProdutos;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, uFormFiltroPai, FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS,
  FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt,
  Data.DB, Vcl.Grids, Vcl.DBGrids, FireDAC.Comp.Client, FireDAC.Comp.DataSet,
  Vcl.StdCtrls, Vcl.ExtCtrls, uFormCadastroProduto;

type
  TFormFiltroProdutos = class(TFormFiltroPai)
    DBGrid1: TDBGrid;
    edtDescricao: TEdit;
    Label2: TLabel;
    fdQryFiltroID_PRODUTO: TIntegerField;
    fdQryFiltroCODIGO: TWideStringField;
    fdQryFiltroDESCRICAO: TWideStringField;
    fdQryFiltroQTD: TSingleField;
    fdQryFiltroCUSTO: TSingleField;
    fdQryFiltroVLR_UNIT: TSingleField;
    fdQryFiltroUNIDADE: TWideStringField;
    fdQryFiltroPESO_LIQUIDO: TSingleField;
    fdQryFiltroPESO_BRUTO: TSingleField;
    fdQryFiltroFABRICANTE: TWideStringField;
    fdQryFiltroMARCA: TWideStringField;
    fdQryFiltroMODELO: TWideStringField;
    fdQryFiltroFORNECEDOR: TWideStringField;
    btnAbrirCadastro: TButton;
    procedure btnFiltroClick(Sender: TObject);
    procedure btnAbrirCadastroClick(Sender: TObject);
  private
    { Private declarations }
    procedure Filtrar;
    procedure ValidaQueryVazia;
  public
    { Public declarations }
  end;

var
  FormFiltroProdutos: TFormFiltroProdutos;

implementation

{$R *.dfm}

procedure TFormFiltroProdutos.btnAbrirCadastroClick(Sender: TObject);
begin
  inherited;
  FormCadastroProduto := TFormCadastroProduto.Create(Self);
  try
    FormCadastroProduto.fdQryCadastro.Locate('ID_PRODUTO',
      fdQryFiltro.FieldByName('ID_PRODUTO').AsInteger, []);
    FormCadastroProduto.ShowModal;
  finally
    FreeAndNil(FormCadastroProduto);
  end;
end;

procedure TFormFiltroProdutos.btnFiltroClick(Sender: TObject);
begin
  inherited;
  Filtrar;

end;

procedure TFormFiltroProdutos.Filtrar;
begin
  fdQryFiltro.Close;
  fdQryFiltro.SQL.Clear;
  fdQryFiltro.SQL.Add('SELECT P.ID_PRODUTO,');
  fdQryFiltro.SQL.Add('       P.CODIGO,');
  fdQryFiltro.SQL.Add('       P.DESCRICAO,');
  fdQryFiltro.SQL.Add('       P.QTD,');
  fdQryFiltro.SQL.Add('       P.CUSTO,');
  fdQryFiltro.SQL.Add('       P.VLR_UNIT,');
  fdQryFiltro.SQL.Add('       P.UNIDADE,');
  fdQryFiltro.SQL.Add('       P.PESO_LIQUIDO,');
  fdQryFiltro.SQL.Add('       P.PESO_BRUTO,');
  fdQryFiltro.SQL.Add('       P.FABRICANTE,');
  fdQryFiltro.SQL.Add('       P.MARCA,');
  fdQryFiltro.SQL.Add('       P.MODELO,');
  fdQryFiltro.SQL.Add('       F.RAZAO_SOCIAL AS FORNECEDOR');
  fdQryFiltro.SQL.Add('FROM PRODUTO P LEFT JOIN FORNECEDOR F ON F.ID_FORNECEDOR = P.ID_FORNECEDOR');
  fdQryFiltro.SQL.Add('WHERE 1=1');

  if Trim(edtFiltro.Text) <> '' then
  begin
    fdQryFiltro.SQL.Add(' AND UPPER(TRIM(CODIGO)) LIKE ' +
      QuotedStr('%' + UpperCase(Trim(edtFiltro.Text)) + '%'));
  end;

  if Trim(edtDescricao.Text) <> '' then
  begin
    fdQryFiltro.SQL.Add(' AND UPPER(TRIM(RAZAO_SOCIAL)) LIKE ' +
      QuotedStr('%' + UpperCase(Trim(edtDescricao.Text)) + '%'));
  end;

  fdQryFiltro.Open();
  fdQryFiltro.FetchAll;

end;

procedure TFormFiltroProdutos.ValidaQueryVazia;
begin
  if fdQryFiltro.IsEmpty then
  begin
    Abort;
  end;
end;

end.
